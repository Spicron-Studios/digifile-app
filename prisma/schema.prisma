generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model file_info {
  uid                            String                           @id @db.Uuid
  file_number                    String?                          @db.VarChar(255)
  account_number                 String?                          @db.VarChar(255)
  billing_account_no             String?                          @db.VarChar(255)
  referral_doc_name              String?                          @db.VarChar(255)
  referral_doc_number            String?                          @db.VarChar(255)
  consent1                       Boolean?
  consent2                       Boolean?
  consent3                       Boolean?
  orgid                          String?                          @db.Uuid
  active                         Boolean?
  date_created                   DateTime?                        @db.Timestamp(6)
  last_edit                      DateTime?                        @db.Timestamp(6)
  locked                         Boolean?
  organization_info              organization_info?               @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "file_info_organization_info_fk")
  fileinfo_patient               fileinfo_patient[]
  injury_on_duty                 injury_on_duty[]
  patient_medical_aid            patient_medical_aid[]
  patientmedicalaid_file_patient patientmedicalaid_file_patient[]
  person_responsible             person_responsible[]
}

model fileinfo_patient {
  uid               String             @id @db.Uuid
  patientid         String?            @db.Uuid
  fileid            String?            @db.Uuid
  orgid             String?            @db.Uuid
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  locked            Boolean?
  file_info         file_info?         @relation(fields: [fileid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "fileinfo_patient_file_info_fk")
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "fileinfo_patient_organization_info_fk")
  patient           patient?           @relation(fields: [patientid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "fileinfo_patient_patient_fk")
  tab_notes         tab_notes[]
}

model injury_on_duty {
  uid               String             @id @db.Uuid
  company_name      String?            @db.VarChar(255)
  contact_person    String?            @db.VarChar(255)
  contact_number    String?            @db.VarChar(255)
  contact_email     String?            @db.VarChar(255)
  created_date      DateTime?          @db.Timestamp(6)
  fileid            String?            @db.Uuid
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  orgid             String?            @db.Uuid
  locked            Boolean?
  file_info         file_info?         @relation(fields: [fileid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "injury_on_duty_file_info_fk")
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "injury_on_duty_organization_info_fk")
}

model logo_table {
  uid               String             @id @db.Uuid
  filename          String?            @db.VarChar(255)
  file_location     String?
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  orgid             String?            @db.Uuid
  locked            Boolean?
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "logo_table_organization_info_fk")
}

model medical_scheme {
  uid                 String                @id @db.Uuid
  scheme_name         String?               @db.VarChar(255)
  active              Boolean?
  date_created        DateTime?             @db.Timestamp(6)
  last_edit           DateTime?             @db.Timestamp(6)
  orgid               String?               @db.Uuid
  locked              Boolean?
  patient_medical_aid patient_medical_aid[]
}

model notifications {
  uid               String             @id @db.Uuid
  orgid             String?            @db.Uuid
  type              String?            @db.VarChar(255)
  time_stamp        DateTime?          @db.Timestamp(6)
  destination       String?            @db.VarChar(255)
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  locked            Boolean?
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "notifications_organization_info_fk")
}

model organization_info {
  uid                                 String                           @id @db.Uuid
  practice_name                       String?                          @db.VarChar(255)
  bhf_number                          String?                          @db.VarChar(255)
  hpcsa                               String?                          @db.VarChar(255)
  practice_type                       String?                          @db.VarChar(255)
  vat_no                              String?                          @db.VarChar(255)
  address                             String?
  postal                              String?
  practice_telephone                  String?                          @db.VarChar(255)
  accounts_telephone                  String?                          @db.VarChar(255)
  cell                                String?                          @db.VarChar(255)
  fax                                 String?                          @db.VarChar(255)
  email                               String?                          @db.VarChar(255)
  consent_to_treatment                String?
  consent_to_financial_responsibility String?
  consent_to_release_of_information   String?
  active                              Boolean?
  date_created                        DateTime?                        @db.Timestamp(6)
  last_edit                           DateTime?                        @db.Timestamp(6)
  locked                              Boolean?
  file_info                           file_info[]
  fileinfo_patient                    fileinfo_patient[]
  injury_on_duty                      injury_on_duty[]
  logo_table                          logo_table[]
  notifications                       notifications[]
  organization_payment_details        organization_payment_details[]
  patient                             patient[]
  patient_medical_aid                 patient_medical_aid[]
  patientmedicalaid_file_patient      patientmedicalaid_file_patient[]
  person_responsible                  person_responsible[]
  signature                           signature[]
  tab_files                           tab_files[]
  tab_notes                           tab_notes[]
  user_calendar_entries               user_calendar_entries[]
  user_roles                          user_roles[]
  users                               users[]
}

model organization_payment_details {
  uid               String             @id @db.Uuid
  orgid             String?            @db.Uuid
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  locked            Boolean?
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "organization_payment_details_organization_info_fk")
}

model patient {
  uid                            String                           @id @db.Uuid
  orgid                          String?                          @db.Uuid
  id                             String?                          @db.VarChar(255)
  title                          String?                          @db.VarChar(255)
  name                           String?                          @db.VarChar(255)
  initials                       String?                          @db.VarChar(255)
  surname                        String?                          @db.VarChar(255)
  date_of_birth                  DateTime?                        @db.Date
  gender                         String?                          @db.VarChar(255)
  cell_phone                     String?                          @db.VarChar(255)
  additional_name                String?                          @db.VarChar(255)
  additional_cell                String?                          @db.VarChar(255)
  email                          String?                          @db.VarChar(255)
  address                        String?
  active                         Boolean?
  date_created                   DateTime?                        @db.Timestamp(6)
  last_edit                      DateTime?                        @db.Timestamp(6)
  locked                         Boolean?
  fileinfo_patient               fileinfo_patient[]
  organization_info              organization_info?               @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patient_organization_info_fk")
  patientmedicalaid_file_patient patientmedicalaid_file_patient[]
  person_responsible             person_responsible[]
  tab_notes                      tab_notes[]
}

model patient_medical_aid {
  uid                            String                           @id @db.Uuid
  medical_scheme_id              String?                          @db.Uuid
  membership_number              String?                          @db.VarChar(255)
  patient_dependant_code         String?                          @db.VarChar(255)
  patient_or_not                 String?                          @db.VarChar(255)
  fileid                         String?                          @db.Uuid
  active                         Boolean?
  date_created                   DateTime?                        @db.Timestamp(6)
  last_edit                      DateTime?                        @db.Timestamp(6)
  orgid                          String?                          @db.Uuid
  locked                         Boolean?
  file_info                      file_info?                       @relation(fields: [fileid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patient_medical_aid_file_info_fk")
  medical_scheme                 medical_scheme?                  @relation(fields: [medical_scheme_id], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patient_medical_aid_medical_scheme_fk")
  organization_info              organization_info?               @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patient_medical_aid_organization_info_fk")
  patientmedicalaid_file_patient patientmedicalaid_file_patient[]
}

model patientmedicalaid_file_patient {
  uid                    String               @id @db.Uuid
  patient_medical_aid_id String?              @db.Uuid
  fileid                 String?              @db.Uuid
  patientid              String?              @db.Uuid
  active                 Boolean?
  date_created           DateTime?            @db.Timestamp(6)
  last_edit              DateTime?            @db.Timestamp(6)
  orgid                  String?              @db.Uuid
  locked                 Boolean?
  file_info              file_info?           @relation(fields: [fileid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patientmedicalaid_file_patient_file_info_fk")
  organization_info      organization_info?   @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patientmedicalaid_file_patient_organization_info_fk")
  patient                patient?             @relation(fields: [patientid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patientmedicalaid_file_patient_patient_fk")
  patient_medical_aid    patient_medical_aid? @relation(fields: [patient_medical_aid_id], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "patientmedicalaid_file_patient_patient_medical_aid_fk")
}

model person_responsible {
  uid               String             @id @db.Uuid
  orgid             String?            @db.Uuid
  person_type       String?            @db.VarChar(255)
  fileid            String?            @db.Uuid
  personid          String?            @db.Uuid
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  locked            Boolean?
  file_info         file_info?         @relation(fields: [fileid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "person_responsible_file_info_fk")
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "person_responsible_organization_info_fk")
  patient           patient?           @relation(fields: [personid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "person_responsible_patient_fk")
}

model roles {
  uid          String       @id @db.Uuid
  role_name    String?      @db.VarChar(255)
  description  String?
  active       Boolean?
  date_created DateTime?    @db.Timestamp(6)
  last_edit    DateTime?    @db.Timestamp(6)
  locked       Boolean?
  user_roles   user_roles[]
}

model signature {
  uid               String             @id @db.Uuid
  userid            String?            @db.Uuid
  filename          String?            @db.VarChar(255)
  file_location     String?
  orgid             String?            @db.Uuid
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  locked            Boolean?
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "signature_organization_info_fk")
  users             users?             @relation(fields: [userid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "signature_users_fk")
}

model tab_files {
  uid               String             @id @db.Uuid
  orgid             String?            @db.Uuid
  tab_notes_id      String?            @db.Uuid
  file_name         String?            @db.VarChar(255)
  file_type         String?            @db.VarChar(255)
  file_location     String?
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  locked            Boolean?
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "tab_files_organization_info_fk")
  tab_notes         tab_notes?         @relation(fields: [tab_notes_id], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "tab_files_tab_notes_fk")
}

model tab_notes {
  uid                 String             @id @db.Uuid
  orgid               String?            @db.Uuid
  fileinfo_patient_id String?            @db.Uuid
  personid            String?            @db.Uuid
  time_stamp          DateTime?          @db.Timestamp(6)
  notes               String?
  tab_type            String?            @db.VarChar(255)
  active              Boolean?
  date_created        DateTime?          @db.Timestamp(6)
  last_edit           DateTime?          @db.Timestamp(6)
  locked              Boolean?
  tab_files           tab_files[]
  fileinfo_patient    fileinfo_patient?  @relation(fields: [fileinfo_patient_id], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "tab_notes_fileinfo_patient_fk")
  organization_info   organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "tab_notes_organization_info_fk")
  patient             patient?           @relation(fields: [personid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "tab_notes_patient_fk")
}

model user_calendar_entries {
  uid               String             @id @db.Uuid
  user_uid          String?            @db.Uuid
  startdate         DateTime?          @db.Timestamp(6)
  length            Int?
  description       String?            @db.VarChar(255)
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  orgid             String?            @db.Uuid
  locked            Boolean?
  enddate           DateTime?          @db.Timestamp(6)
  title             String?            @db.VarChar(255)
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "user_calendar_entries_organization_info_fk")
  users             users?             @relation(fields: [user_uid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "user_calendar_entries_users_fk")
}

model user_roles {
  uid               String             @id @db.Uuid
  userid            String?            @db.Uuid
  roleid            String?            @db.Uuid
  orgid             String?            @db.Uuid
  active            Boolean?
  date_created      DateTime?          @db.Timestamp(6)
  last_edit         DateTime?          @db.Timestamp(6)
  locked            Boolean?
  organization_info organization_info? @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "user_roles_organization_info_fk")
  roles             roles?             @relation(fields: [roleid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "user_roles_roles_fk")
  users             users?             @relation(fields: [userid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "user_roles_users_fk")
}

model users {
  uid                   String                  @id @db.Uuid
  title                 String?                 @db.VarChar(255)
  first_name            String?                 @db.VarChar(255)
  surname               String?                 @db.VarChar(255)
  cell_no               String?                 @db.VarChar(255)
  secret_key            String?                 @db.VarChar(255)
  email                 String?                 @db.VarChar(255)
  username              String?                 @db.VarChar(255)
  login_key             String?                 @db.VarChar(255)
  active                Boolean?
  date_created          DateTime?               @db.Timestamp(6)
  last_edit             DateTime?               @db.Timestamp(6)
  orgid                 String?                 @db.Uuid
  locked                Boolean?
  signature             signature[]
  user_calendar_entries user_calendar_entries[]
  user_roles            user_roles[]
  organization_info     organization_info?      @relation(fields: [orgid], references: [uid], onDelete: NoAction, onUpdate: NoAction, map: "users_organization_info_fk")
}

model Practice_Types {
  uuid         String    @id @db.Uuid
  codes        String?
  name         String?
  active       Boolean?
  last_edit    DateTime? @db.Timestamp(6)
  date_created DateTime? @db.Timestamp(6)
}
